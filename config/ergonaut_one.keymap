#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <3 3>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB                  &kp Q            &kp W           &kp E               &kp R             &kp T      &kp Y        &kp U              &kp I                &kp O            &kp P                &kp LBKT
&mt LEFT_CONTROL ESCAPE  &mt LEFT_META A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G      &kp H        &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt L RIGHT_ALT  &mt RIGHT_META SEMI  &kp SINGLE_QUOTE
&kp LEFT_ALT             &kp Z            &kp X           &kp C               &kp V             &kp B      &kp N        &kp M              &kp COMMA            &kp DOT          &kp FSLH             &kp RIGHT_BRACKET
                                                          &kp LEFT_GUI        &mt LSHFT SPACE   &lt 0 RET  &lt 2 ENTER  &mt RSHFT BSPC     &lt 0 DEL
            >;
        };

        num {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT   &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL  &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH   &trans  &trans     &trans     &trans    &trans    &trans
                           &kp DOT  &kp N0  &kp MINUS  &trans  &trans     &trans
            >;
        };

        sym {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp STAR              &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS         &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT                &kp HASH               &kp PIPE         &trans  &trans     &trans     &trans    &trans    &trans
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE   &trans  &trans     &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans  &kp K_COPY    &kp K_PASTE   &kp K_CUT   &kp K_UNDO     &kp K_REDO  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans  &kp LEFT      &kp DOWN      &kp UP      &kp RIGHT      &trans      &trans
&trans  &trans    &trans    &trans     &trans     &trans  &kp LG(LEFT)  &kp LG(DOWN)  &kp LG(UP)  &kp LG(RIGHT)  &trans      &trans
                            &trans     &trans     &trans  &trans        &trans        &trans
            >;
        };

        media {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans  &trans  &trans        &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans        &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans  &trans  &trans        &kp C_VOL_DN          &kp C_VOL_UP          &trans        &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_SEL 3  &trans
                            &trans     &trans     &trans  &trans  &trans        &kp K_MUTE
            >;
        };

        fun {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9     &trans   &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6     &trans   &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3     &trans   &trans  &trans     &trans     &trans    &trans    &trans
                         &trans  &kp SPACE  &kp TAB  &trans  &trans     &trans
            >;
        };
    };
};
